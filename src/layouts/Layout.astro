---
import Analytics from '../components/Analytics.astro';

interface Props {
	title: string;
	description?: string;
}

const { title, description = "Software Engineer & Product Designer Portfolio" } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={description} />
		<meta name="keywords" content="Mélisande Cornet, Software Engineer, Product Designer, React, TypeScript, Next.js, Python, FastAPI, AWS, Full Stack Developer, UI/UX Designer" />
		<meta name="author" content="Mélisande Cornet" />
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content="https://melisande.dev/" />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content="/og-image.jpg" />
		
		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content="https://melisande.dev/" />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content="/og-image.jpg" />
		
		<!-- Performance -->
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link rel="preconnect" href="https://api.github.com">
		<link rel="dns-prefetch" href="https://www.behance.net">
		<link rel="dns-prefetch" href="https://vercel.com">
		
		<!-- Fonts -->
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Fira+Code:wght@400;500&display=swap" rel="stylesheet">
		
		<!-- Structured Data -->
		<script type="application/ld+json">
		{
			"@context": "https://schema.org",
			"@type": "Person",
			"name": "Mélisande Cornet",
			"jobTitle": "Software Engineer & Product Designer",
			"description": "Full-stack developer and product designer with expertise in React, TypeScript, Python, and modern web technologies.",
			"url": "https://melisande.dev",
			"sameAs": [
				"https://github.com/melisandec",
				"https://www.behance.net/mlisandecornet",
				"https://vercel.com/melisandecs-projects"
			],
			"knowsAbout": [
				"React",
				"TypeScript",
				"Next.js",
				"Python",
				"FastAPI",
				"AWS",
				"Product Design",
				"UI/UX Design"
			]
		}
		</script>
		
		<title>{title}</title>
	</head>
	<body>
		<header role="banner">
			<nav role="navigation" aria-label="Main navigation">
				<div class="nav-content">
					<a href="/" class="logo" aria-label="Mélisande Cornet - Home">Mélisande</a>
					<div class="nav-links">
						<a href="#about" aria-label="Go to About section">About</a>
						<a href="#projects" aria-label="Go to Projects section">Projects</a>
						<a href="#design" aria-label="Go to Design section">Design</a>
						<a href="#github" aria-label="Go to GitHub section">GitHub</a>
						<a href="#contact" aria-label="Go to Contact section">Contact</a>
						<button id="theme-toggle" class="theme-toggle" aria-label="Toggle dark mode" aria-pressed="false">
							<svg class="sun-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
								<circle cx="12" cy="12" r="5"></circle>
								<line x1="12" y1="1" x2="12" y2="3"></line>
								<line x1="12" y1="21" x2="12" y2="23"></line>
								<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
								<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
								<line x1="1" y1="12" x2="3" y2="12"></line>
								<line x1="21" y1="12" x2="23" y2="12"></line>
								<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
								<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
							</svg>
							<svg class="moon-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
								<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
							</svg>
						</button>
					</div>
				</div>
			</nav>
		</header>
		<main role="main">
			<slot />
		</main>
		<footer role="contentinfo">
			<p>&copy; {new Date().getFullYear()} Mélisande Cornet. All rights reserved.</p>
		</footer>
		<Analytics />
		<script src="/src/scripts/animations.js"></script>
	</body>
</html>

<style is:global>
	:root {
		--primary-color: #007AFF;
		--text-color: #333;
		--background-color: #ffffff;
		--secondary-background: #f5f5f5;
		--card-background: #ffffff;
		--border-color: rgba(0, 0, 0, 0.1);
	}

	:root[data-theme="dark"] {
		--primary-color: #0A84FF;
		--text-color: #E1E1E1;
		--background-color: #1C1C1E;
		--secondary-background: #2C2C2E;
		--card-background: #2C2C2E;
		--border-color: rgba(255, 255, 255, 0.1);
	}

	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	html {
		font-family: 'Inter', system-ui, sans-serif;
		color: var(--text-color);
		background-color: var(--background-color);
		scroll-behavior: smooth;
	}

	body {
		min-height: 100vh;
		display: flex;
		flex-direction: column;
	}

	header {
		position: fixed;
		top: 0;
		width: 100%;
		background-color: var(--background-color);
		backdrop-filter: blur(5px);
		z-index: 1000;
		box-shadow: 0 2px 10px var(--border-color);
	}

	nav {
		padding: 1rem 2rem;
	}

	.nav-content {
		max-width: 1200px;
		margin: 0 auto;
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	.logo {
		font-size: 1.5rem;
		font-weight: 700;
		color: var(--primary-color);
		text-decoration: none;
	}

	.nav-links {
		display: flex;
		gap: 2rem;
		align-items: center;
	}

	.nav-links a {
		color: var(--text-color);
		text-decoration: none;
		font-weight: 500;
		transition: color 0.3s ease;
	}

	.nav-links a:hover {
		color: var(--primary-color);
	}

	.theme-toggle {
		background: none;
		border: none;
		padding: 0.5rem;
		cursor: pointer;
		color: var(--text-color);
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: background-color 0.3s ease;
	}

	.theme-toggle:hover {
		background-color: var(--secondary-background);
	}

	.sun-icon {
		display: none;
	}

	.moon-icon {
		display: block;
	}

	:root[data-theme="dark"] .sun-icon {
		display: block;
	}

	:root[data-theme="dark"] .moon-icon {
		display: none;
	}

	main {
		flex: 1;
		margin-top: 4rem;
	}

	footer {
		text-align: center;
		padding: 2rem;
		background-color: var(--secondary-background);
	}

	@media (max-width: 768px) {
		.nav-content {
			flex-direction: column;
			gap: 1rem;
		}

		.nav-links {
			flex-direction: column;
			align-items: center;
			gap: 1rem;
		}
	}
</style>

<script>
	// Check for saved theme preference or use system preference
	const theme = (() => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
			return 'dark';
		}
		return 'light';
	})();

	// Apply theme
	if (theme === 'dark') {
		document.documentElement.setAttribute('data-theme', 'dark');
	}

	// Theme toggle functionality
	const toggleTheme = () => {
		const element = document.documentElement;
		const button = document.getElementById('theme-toggle');
		const isDark = element.getAttribute('data-theme') === 'dark';
		const newTheme = isDark ? 'light' : 'dark';
		
		element.setAttribute('data-theme', newTheme);
		localStorage.setItem('theme', newTheme);
		
		// Update aria-pressed for accessibility
		if (button) {
			button.setAttribute('aria-pressed', newTheme === 'dark' ? 'true' : 'false');
		}
	};

	// Add click event listener to theme toggle button
	document.getElementById('theme-toggle')?.addEventListener('click', toggleTheme);
	
	// Update aria-pressed on initial load
	const initialTheme = document.documentElement.getAttribute('data-theme');
	const themeButton = document.getElementById('theme-toggle');
	if (themeButton) {
		themeButton.setAttribute('aria-pressed', initialTheme === 'dark' ? 'true' : 'false');
	}
</script>
